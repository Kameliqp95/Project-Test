[{"C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\index.tsx":"1","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\reportWebVitals.ts":"2","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\App.tsx":"3","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\i18n.tsx":"4","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\RegistrationForm.tsx":"5","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\TableView.tsx":"6","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\LoginForm.tsx":"7","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\DropdownLanguage.tsx":"8","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\MapsView.tsx":"9","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\ChangeFontSize.tsx":"10","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\ProfileView.tsx":"11","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\CommentsView.tsx":"12"},{"size":483,"mtime":1625043001731,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1624628584881,"results":"15","hashOfConfig":"14"},{"size":2550,"mtime":1625043265217,"results":"16","hashOfConfig":"14"},{"size":395,"mtime":1625043229309,"results":"17","hashOfConfig":"14"},{"size":5093,"mtime":1625043093217,"results":"18","hashOfConfig":"14"},{"size":4055,"mtime":1625043177177,"results":"19","hashOfConfig":"14"},{"size":3207,"mtime":1625043192034,"results":"20","hashOfConfig":"14"},{"size":588,"mtime":1625042833402,"results":"21","hashOfConfig":"14"},{"size":277,"mtime":1625043120308,"results":"22","hashOfConfig":"14"},{"size":1607,"mtime":1625042833402,"results":"23","hashOfConfig":"14"},{"size":7304,"mtime":1625043156170,"results":"24","hashOfConfig":"14"},{"size":3629,"mtime":1625042902266,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1tyt2ze",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\index.tsx",["60","61","62","63"],"import React, { Component, Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './i18n';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from './i18n';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n\r\n      <App />\r\n\r\n\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n",["64","65"],"C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\reportWebVitals.ts",[],"C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\App.tsx",["66"],"import { Suspense } from 'react';\r\nimport './App.css';\r\nimport LoginForm from './assets/LoginForm';\r\nimport RegistrationForm from './assets/RegistrationForm';\r\nimport { NavLink, Switch, Route } from 'react-router-dom';\r\nimport ProfileView from './assets/ProfileView';\r\nimport CommentsView from './assets/CommentsView';\r\nimport TableView from './assets/TableView';\r\nimport MapsView from './assets/MapsView';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport DropdownLanguage from './assets/DropdownLanguage';\r\nimport ChangeFontSize from './assets/ChangeFontSize';\r\n\r\n\r\nconst Navigation = () => {\r\n  const { t, i18n } = useTranslation();\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li><NavLink exact activeClassName=\"current\" to='/'>{t(\"Home\")}</NavLink></li>\r\n        <li><NavLink exact activeClassName=\"current\" to='/register'>{t(\"Register\")}</NavLink></li>\r\n        <li><NavLink exact activeClassName=\"current\" to='/login'>{t(\"Login\")}</NavLink></li>\r\n        <li><NavLink exact activeClassName=\"current\" to='/profile'>{t(\"My profile\")}</NavLink></li>\r\n        <li><NavLink exact activeClassName=\"current\" to='/comments'>{t(\"Comments\")}</NavLink></li>\r\n        <li><NavLink exact activeClassName=\"current\" to='/table'>{t(\"Table\")}</NavLink></li>\r\n        <li><NavLink exact activeClassName=\"current\" to='/maps'>{t(\"Maps\")}</NavLink></li>\r\n        <Suspense fallback=\"loading\">\r\n          <div className=\"Lang\">\r\n            <ChangeFontSize />\r\n            <DropdownLanguage />\r\n          </div>\r\n        </Suspense>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst Home = () => (\r\n  <div className='home'>\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n);\r\n\r\nconst Login = () => (\r\n  <LoginForm />\r\n);\r\n\r\nconst Register = () => (\r\n  <RegistrationForm />\r\n);\r\n\r\nconst Profile = () => (\r\n  <ProfileView />\r\n);\r\n\r\nconst Comments = () => (\r\n  <CommentsView />\r\n);\r\n\r\nconst Table = () => (\r\n  <TableView />\r\n);\r\n\r\nconst Maps = () => (\r\n  <MapsView />\r\n);\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path='/' component={Home}></Route>\r\n    <Route exact path='/register' component={Register}></Route>\r\n    <Route exact path='/login' component={Login}></Route>\r\n    <Route exact path='/profile' component={Profile}></Route>\r\n    <Route exact path='/comments' component={Comments}></Route>\r\n    <Route exact path='/table' component={Table}></Route>\r\n    <Route exact path='/maps' component={Maps}></Route>\r\n  </Switch>\r\n);\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Navigation />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\i18n.tsx",[],"C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\RegistrationForm.tsx",["67","68"],"import { useFormik } from 'formik'\r\nimport { Button, createMuiTheme, TextField } from '@material-ui/core'\r\nimport { useTranslation } from 'react-i18next';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nfunction RegistrationForm() {\r\n  const { t, i18n } = useTranslation();\r\n  const initialValues = {\r\n    username: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    city: '',\r\n    address: '',\r\n    email: ''\r\n  }\r\n  const theme = createMuiTheme({\r\n\r\n  });\r\n  const onSubmit = (values: any) => { console.log('formData', values) }\r\n  const validate = (values: { username: any; password: any; firstName: any; lastName: any; city: any; address: any; email: any }) => {\r\n    let errors: any = {}\r\n    if (!values.username) {\r\n      errors.username = <h5>{t('required username')}</h5>\r\n    }\r\n    if (!values.password) {\r\n      errors.password = <h5>{t('required password')}</h5>\r\n    }\r\n    if (!values.firstName) {\r\n      errors.firstName = <h5>{t('required firstname')}</h5>\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = <h5>{t('required lastname')}</h5>\r\n    }\r\n    if (!values.city) {\r\n      errors.city = <h5>{t('required city')}</h5>\r\n    }\r\n    if (!values.address) {\r\n      errors.address = <h5>{t('required address')}</h5>\r\n    }\r\n    if (!values.email) {\r\n      errors.email = <h5>{t('required email')}</h5>\r\n    }\r\n    return errors\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validate\r\n  })\r\n  console.log('formValues', formik.values)\r\n  console.log('formErrors', formik.errors)\r\n  return (\r\n    <div className=\"form-style-3\">\r\n      <AddCircleOutlineIcon className=\"sign_in_lock\" />\r\n      <span className=\"sign_in\" >{t(\"Sign Up\")}</span>\r\n      <form className=\"up\" onSubmit={formik.handleSubmit}>\r\n\r\n\r\n        <TextField\r\n\r\n          label={t(\"Username\")}\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n          name='username'\r\n          type=\"text\"\r\n          className=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.username}\r\n        />\r\n        <br />\r\n        {formik.errors.username ? <div className=\"errors\">{formik.errors.username}</div> : null}\r\n        <br />\r\n        <TextField\r\n\r\n          label={t(\"Password\")}\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n          name='password'\r\n          type=\"password\"\r\n          className=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.password}\r\n        />\r\n        <br />\r\n        {formik.errors.password ? <div className=\"errors\">{formik.errors.password}</div> : null}\r\n        <br />\r\n        <TextField\r\n\r\n          label={t(\"First Name\")}\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n          name='firstName'\r\n          type=\"First Name\"\r\n          className=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.firstName}\r\n        />\r\n        <br />\r\n        {formik.errors.firstName ? <div className=\"errors\">{formik.errors.firstName}</div> : null}\r\n        <br />\r\n        <TextField\r\n\r\n          label={t(\"Last Name\")}\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n          name='lastName'\r\n          type=\"Last Name\"\r\n          className=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.lastName}\r\n        />\r\n        <br />\r\n        {formik.errors.lastName ? <div className=\"errors\">{formik.errors.lastName}</div> : null}\r\n        <br />\r\n\r\n        <TextField\r\n\r\n          label={t(\"E-mail\")}\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n          name='email'\r\n          type=\"email\"\r\n          className=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        <br />\r\n        {formik.errors.email ? <div className=\"errors\">{formik.errors.email}</div> : null}\r\n        <br />\r\n\r\n        <TextField\r\n\r\n          label={t(\"City\")}\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n          name='city'\r\n          type=\"City\"\r\n          className=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.city}\r\n        />\r\n        <br />\r\n        {formik.errors.city ? <div className=\"errors\">{formik.errors.city}</div> : null}\r\n        <br />\r\n        <TextField\r\n\r\n          label={t(\"Address\")}\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n          name='address'\r\n          type=\"Address\"\r\n          className=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.address}\r\n        />\r\n        <br />\r\n        {formik.errors.address ? <div className=\"errors\">{formik.errors.address}</div> : null}\r\n        <br />\r\n\r\n\r\n        <Button type=\"submit\" className=\"buttons_size\" variant=\"contained\" color=\"primary\" >\r\n          {t(\"Submit\")}\r\n        </Button>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegistrationForm\r\n\r\n\r\n","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\TableView.tsx",["69"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport { Delete} from '@material-ui/icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { NavLink } from 'react-router-dom';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\n\r\nfunction createData(firstname: string, lastname: string, email: string, comment: string, nickname: string, action: any,) {\r\n  return { firstname, lastname, email, comment, nickname, action };\r\n}\r\n\r\nconst rows = [\r\n  createData('Kamelia', 'Pavlova', 'kamelip@abv.bg', 'comment', 'nickname',\r\n    <>\r\n      <NavLink className=\"actions\" to='#'><Edit /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><Delete /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><RoomIcon /></NavLink>\r\n    </>\r\n  ),\r\n  createData('Evgeni', 'Ivanov', 'eivanov@abv.bg', 'comment1', 'nickname1',\r\n    <>\r\n      <NavLink className=\"actions\" to='#'><Edit /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><Delete /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><RoomIcon /></NavLink>\r\n    </>),\r\n  createData('Georgi', 'Georgiev', 'ggeorgiev@gmail.com', 'comment2', 'nickname2',\r\n    <>\r\n      <NavLink className=\"actions\" to='#'><Edit /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><Delete /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><RoomIcon /></NavLink>\r\n    </>),\r\n  createData('Teodor', 'Todorov', 'ttodorov@gmail.com', 'comment3', 'nickname3',\r\n    <>\r\n      <NavLink className=\"actions\" to='#'><Edit /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><Delete /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><RoomIcon /></NavLink>\r\n    </>),\r\n  createData('Maria', 'Georgieva', 'mgeorgieva.abv.bg', 'comment4', 'nickname4',\r\n    <>\r\n      <NavLink className=\"actions\" to='#'><Edit /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><Delete /></NavLink>\r\n      <NavLink className=\"actions\" to='#'><RoomIcon /></NavLink>\r\n    </>),\r\n];\r\n\r\nexport default function TableView() {\r\n  const classes = useStyles();\r\n  const { t, i18n } = useTranslation();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{t(\"First Name1\")}</TableCell>\r\n            <TableCell align=\"right\">{t(\"Last Name1\")}</TableCell>\r\n            <TableCell align=\"right\">{t(\"E-mail1\")}</TableCell>\r\n            <TableCell align=\"right\">{t(\"Comments\")}</TableCell>\r\n            <TableCell align=\"right\">{t(\"Nickname\")}</TableCell>\r\n            <TableCell align=\"right\">{t(\"Edit/Delete\")}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.firstname}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.firstname}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.lastname}</TableCell>\r\n              <TableCell align=\"right\">{row.email}</TableCell>\r\n              <TableCell align=\"right\">{row.comment}</TableCell>\r\n              <TableCell align=\"right\">{row.nickname}</TableCell>\r\n              <TableCell align=\"right\">{row.action}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\LoginForm.tsx",["70","71","72"],"import { useFormik } from 'formik'\r\nimport { Button, Checkbox, createMuiTheme, Link, makeStyles, TextField } from '@material-ui/core'\r\nimport { useTranslation } from 'react-i18next';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport '../App.css';\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  remember: false\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n\r\n});\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    margin: '0px'\r\n  },\r\n  input: {\r\n    margin: '5px',\r\n  },\r\n});\r\nfunction LoginForm() {\r\n  const onSubmit = (values: any) => { console.log('formData', values) }\r\n  const validate = (values: { username: string; password: string }) => {\r\n    let errors: any = {}\r\n    if (!values.username) {\r\n      errors.username = <h5>{t('required username')}</h5>\r\n    }\r\n    if (!values.password) {\r\n      errors.password = <h5>{t('required password')}</h5>\r\n    }\r\n    return errors\r\n  }\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validate\r\n  })\r\n  console.log('formValues', formik.values)\r\n  console.log('formErrors', formik.errors)\r\n  const classes = useStyles();\r\n\r\n  const styles = (theme: { spacing: { unit: any; }; }) => ({\r\n    input: {\r\n      display: 'none',\r\n    }\r\n  });\r\n\r\n  return (\r\n\r\n    <div className=\"form-style-3\">\r\n      <LockIcon className=\"sign_in_lock\" />\r\n      <span className=\"sign_in\" >{t(\"Sign In\")}</span>\r\n      <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\r\n        <div className='form-control up'>\r\n\r\n          <TextField\r\n\r\n            label={t(\"Username\")}\r\n            variant=\"outlined\"\r\n            id=\"mui-theme-provider-outlined-input\"\r\n            name='username'\r\n            type=\"text\"\r\n            className=\"login\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.username}\r\n          />\r\n          <br />\r\n          {formik.errors.username ? <div className=\"errors\">{formik.errors.username}</div> : null}\r\n          <br />\r\n\r\n          <TextField\r\n\r\n            label={t(\"Password\")}\r\n            variant=\"outlined\"\r\n            id=\"mui-theme-provider-outlined-input\"\r\n            name='password'\r\n            type=\"password\"\r\n            className=\"login\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          />\r\n          <br />\r\n          {formik.errors.password ? <div className=\"errors\">{formik.errors.password}</div> : null}\r\n          <br />\r\n\r\n          <div className='form-control remember'>\r\n            <Checkbox\r\n              id='checkbox'\r\n              name='remember'\r\n              onChange={formik.handleChange}\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n            <label htmlFor='remember'>{t(\"Remember me\")}</label>\r\n\r\n          </div>\r\n\r\n          <Button type=\"submit\" className=\"buttons_size\" variant=\"contained\" color=\"primary\" >\r\n            {t(\"Submit\")}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n\r\n      <Link href=\"/register\" className={classes.link}>\r\n        {t(\"Don't have account? Register now!\")}\r\n      </Link>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\DropdownLanguage.tsx",[],"C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\MapsView.tsx",["73","74","75","76","77"],"import React from 'react'\r\nimport { useFormik } from 'formik'\r\nimport { Grid, Link, makeStyles } from '@material-ui/core'\r\nimport { Layers } from '@material-ui/icons'\r\n\r\n\r\nfunction MapsView() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapsView","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\ChangeFontSize.tsx",["78","79"],"import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport useLocalStorage from 'use-local-storage';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\n\r\nfunction ChangeFontSize() {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            size_buttons: {\r\n                color: '#fff',\r\n            }\r\n        }),\r\n    );\r\n\r\n\r\n\r\n    const [value, setValue] = useLocalStorage('fontSize', 10);\r\n\r\n    const resize = (type: 'increase' | 'decrease') => {\r\n        if (\r\n            value &&\r\n            ((type === 'increase' && value) || (type === 'decrease' && value))\r\n        ) {\r\n            const fontValue = type === 'increase' ? value + 1 : value - 1;\r\n            document.documentElement.style.fontSize = `${fontValue}px`;\r\n            setValue(fontValue);\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    return (\r\n        <>\r\n            <IconButton onClick={() => resize(\"decrease\")} className={classes.size_buttons} aria-label=\"decrease\" size=\"small\">\r\n                <ArrowDownwardIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n            <IconButton onClick={() => resize(\"increase\")} className={classes.size_buttons} aria-label=\"increase\" size=\"small\">\r\n                <ArrowUpwardIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\nexport default ChangeFontSize","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\ProfileView.tsx",["80","81"],"import { makeStyles, createStyles, Theme, createMuiTheme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Avatar, TextField } from '@material-ui/core';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction ProfileView() {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                flexGrow: 1,\r\n            },\r\n            paper: {\r\n                padding: theme.spacing(2),\r\n                textAlign: 'center',\r\n                color: theme.palette.text.secondary,\r\n            },\r\n            inputs: {\r\n                width: '95%',\r\n                margin: '10px',\r\n            },\r\n            margin: {\r\n                margin: '10px',\r\n            },\r\n            avatar: {\r\n                margin: 10,\r\n            },\r\n            bigAvatar: {\r\n                margin: 10,\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n            icon: {\r\n                fontSize: 32,\r\n            },\r\n        }),\r\n    );\r\n    const theme = createMuiTheme({\r\n\r\n    });\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6} container direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\">\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs >\r\n                                <span className=\"font-size\">{t(\"My Picture\")}</span>\r\n                                <Grid item xs={9} sm container direction=\"row\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\">\r\n                                    <Grid item xs={6}>\r\n\r\n\r\n                                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                                            <Avatar alt=\"Ivan Petkov\" src=\"https://lh3.googleusercontent.com/proxy/ON_6Wl5OOBIgjpY16q34DIsPt43kJjJH04y6ballrv1SKUPIO4LYOdbdq4Aio5GRUEt27Nt1uHOH7SmTObg0iB70l6utsENdJHz5uk9w0dORwA\" className={classes.bigAvatar} />\r\n                                        </Grid>\r\n                                        <NavLink className=\"actions\" to='#'><Edit className={classes.icon} /></NavLink>\r\n                                        <NavLink className=\"actions\" to='#'><Delete className={classes.icon} /></NavLink>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\">\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs >\r\n                                <span className=\"font-size\">{t(\"Personal information\")}</span>\r\n                                <Grid item xs={9} sm container direction=\"row\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\">\r\n                                    <Grid item xs={3}>\r\n\r\n\r\n                                        <TextField\r\n\r\n                                            label={t(\"First Name\")}\r\n                                            variant=\"outlined\"\r\n                                            id=\"mui-theme-provider-outlined-input\"\r\n                                            name='firstName'\r\n                                            type=\"text\"\r\n                                            className={classes.margin}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n\r\n                                        <TextField\r\n\r\n                                            label={t(\"Last Name\")}\r\n                                            variant=\"outlined\"\r\n                                            id=\"mui-theme-provider-outlined-input\"\r\n                                            name='lasttName'\r\n                                            type=\"text\"\r\n                                            className={classes.margin}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} sm container direction=\"row\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\">\r\n                                    <Grid item xs={6}>\r\n\r\n                                        <TextField\r\n\r\n                                            label={t(\"E-mail\")}\r\n                                            variant=\"outlined\"\r\n                                            id=\"mui-theme-provider-outlined-input margin\"\r\n                                            name='emailAddress'\r\n                                            type=\"text\"\r\n                                            className={classes.inputs}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} sm container direction=\"row\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\">\r\n                                    <Grid item xs={3}>\r\n\r\n                                        <TextField\r\n\r\n                                            label={t(\"City\")}\r\n                                            variant=\"outlined\"\r\n                                            id=\"mui-theme-provider-outlined-input\"\r\n                                            name='city'\r\n                                            type=\"text\"\r\n                                            className={classes.margin}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n\r\n                                        <TextField\r\n\r\n                                            label={t(\"Address\")}\r\n                                            variant=\"outlined\"\r\n                                            id=\"mui-theme-provider-outlined-input\"\r\n                                            name='address'\r\n                                            type=\"text\"\r\n                                            className={classes.margin}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileView\r\n","C:\\Users\\RenetaRumenova\\Documents\\Project-Test\\src\\assets\\CommentsView.tsx",["82","83","84","85","86","87"],"import React from 'react'\r\nimport { useFormik } from 'formik'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 10, 10, 5),\r\n  },\r\n  name: {\r\n    margin: theme.spacing(0, 0, 0, 0),\r\n  },\r\n  multiline: {\r\n    margin: theme.spacing(0, 17, 0, 0),\r\n  },\r\n  cancel: {\r\n    margin: theme.spacing(3, 1, 10, -5),\r\n  },\r\n  icons: {\r\n    margin: theme.spacing(0, 20, 0, 0),\r\n  },\r\n  icons_style: {\r\n    fontSize: 'small',\r\n  },\r\n  bigAvatar: {\r\n    margin: 0,\r\n    width: 50,\r\n    height: 50,\r\n},\r\nwidth: {\r\n  width: '300px',\r\n},\r\n}));\r\n\r\n\r\nfunction CommentsView() {\r\n  const { t, i18n } = useTranslation();\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        <form className={classes.form} noValidate>\r\n\r\n\r\n\r\n          <div className={classes.name}>\r\n            <Grid container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n              <Avatar alt=\"Ivan Petkov\" src=\"https://lh3.googleusercontent.com/proxy/ON_6Wl5OOBIgjpY16q34DIsPt43kJjJH04y6ballrv1SKUPIO4LYOdbdq4Aio5GRUEt27Nt1uHOH7SmTObg0iB70l6utsENdJHz5uk9w0dORwA\" className={classes.bigAvatar} />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField id=\"input-with-icon-grid\" label={t(\"Name\")} />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className={classes.icons}>\r\n            <BottomNavigationAction className={classes.icons_style} label=\"Recents\" value=\"recents\" icon={<RestoreIcon fontSize=\"small\" />} />\r\n            <BottomNavigationAction className={classes.icons_style} label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon fontSize=\"small\" />} />\r\n          </div>\r\n          <div className={classes.multiline}>\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label={t(\"Add Comments\")}\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              className={classes.width}\r\n            />\r\n          </div>\r\n          <Grid container>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.submit}>\r\n          {t(\"Send\")}\r\n            </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" className={classes.cancel}>\r\n          {t(\"Cancel\")}\r\n            </Button>\r\n\r\n\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n\r\n}\r\n\r\nexport default CommentsView",{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"92","line":1,"column":28,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"93","line":8,"column":10,"nodeType":"90","messageId":"91","endLine":8,"endColumn":24},{"ruleId":"88","severity":1,"message":"94","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":12},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"88","severity":1,"message":"99","line":16,"column":14,"nodeType":"90","messageId":"91","endLine":16,"endColumn":18},{"ruleId":"88","severity":1,"message":"99","line":6,"column":14,"nodeType":"90","messageId":"91","endLine":6,"endColumn":18},{"ruleId":"88","severity":1,"message":"100","line":16,"column":9,"nodeType":"90","messageId":"91","endLine":16,"endColumn":14},{"ruleId":"88","severity":1,"message":"99","line":78,"column":14,"nodeType":"90","messageId":"91","endLine":78,"endColumn":18},{"ruleId":"88","severity":1,"message":"100","line":12,"column":7,"nodeType":"90","messageId":"91","endLine":12,"endColumn":12},{"ruleId":"88","severity":1,"message":"99","line":39,"column":14,"nodeType":"90","messageId":"91","endLine":39,"endColumn":18},{"ruleId":"88","severity":1,"message":"101","line":49,"column":9,"nodeType":"90","messageId":"91","endLine":49,"endColumn":15},{"ruleId":"88","severity":1,"message":"102","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"88","severity":1,"message":"103","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"88","severity":1,"message":"104","line":3,"column":16,"nodeType":"90","messageId":"91","endLine":3,"endColumn":20},{"ruleId":"88","severity":1,"message":"105","line":3,"column":22,"nodeType":"90","messageId":"91","endLine":3,"endColumn":32},{"ruleId":"88","severity":1,"message":"106","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"107","line":34,"column":13,"nodeType":"90","messageId":"91","endLine":34,"endColumn":14},{"ruleId":"88","severity":1,"message":"99","line":34,"column":16,"nodeType":"90","messageId":"91","endLine":34,"endColumn":20},{"ruleId":"88","severity":1,"message":"100","line":41,"column":11,"nodeType":"90","messageId":"91","endLine":41,"endColumn":16},{"ruleId":"88","severity":1,"message":"99","line":45,"column":16,"nodeType":"90","messageId":"91","endLine":45,"endColumn":20},{"ruleId":"88","severity":1,"message":"102","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"88","severity":1,"message":"108","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":18},{"ruleId":"88","severity":1,"message":"109","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":24},{"ruleId":"88","severity":1,"message":"110","line":11,"column":8,"nodeType":"90","messageId":"91","endLine":11,"endColumn":11},{"ruleId":"88","severity":1,"message":"111","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":21},{"ruleId":"88","severity":1,"message":"99","line":65,"column":14,"nodeType":"90","messageId":"91","endLine":65,"endColumn":18},"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'useTranslation' is defined but never used.","'i18n' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'i18n' is assigned a value but never used.","'theme' is assigned a value but never used.","'styles' is assigned a value but never used.","'useFormik' is defined but never used.","'Grid' is defined but never used.","'Link' is defined but never used.","'makeStyles' is defined but never used.","'Layers' is defined but never used.","'t' is assigned a value but never used.","'Typography' is defined but never used.","'TextareaAutosize' is defined but never used.","'Box' is defined but never used.","'AccountCircle' is defined but never used.","no-global-assign","no-unsafe-negation"]